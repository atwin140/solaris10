###############################################
# Developed For 7.2.4 by Andrew Darley     
#     andrew.darley.ctr@navy.mil  
#      
# Originally created for:
# Solaris 10 x86/SPARC Manual STIG - Ver 1
# Release: 19 Benchmark Date: 28 Jul 2017
# 
# This is expected to run with a play book that
# defines these variables
# output_path
# out_file
# FIX
###############################################


###############################################
# Developed For 7.2.4 by Andrew Darley     
#     andrew.darley.ctr@navy.mil  
#      
# Originally created for:
# Solaris 10 x86/SPARC Manual STIG - Ver 1
# Release: 19 Benchmark Date: 28 Jul 2017
# 
# This is expected to run with a play book that
# defines these variables
# output_path
# out_file
# FIX
###############################################


- name: V-22310 Check
  shell: awk "-F:" '/root/ {print $6}' /etc/passwd 2>&1 | while read DIR; do grep -i LD_LIBRARY_PATH /root/.* 2>&1; done | awk "-F:" '{print $1}' 2>&1
  args:
    executable: /bin/bash
  register: checkmyconf1
  ignore_errors: True
  changed_when: False

- name: V-22310 Check 2
  shell: awk "-F:" '/root/ {print $6}' /etc/passwd 2>/dev/null | while read DIR; do grep -i LD_LIBRARY_PATH /root/.* 2>/dev/null; done | awk "-F:" '{print $1}' 2>/dev/null
  args:
    executable: /bin/bash
  register: checkmyconf2
  ignore_errors: True
  changed_when: False

- name: V-22310 Finding Open Tags
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <finding 
      v_id="V-22310"
      rule_id="SV-26355r1_rule"
      raw_risk="II"
      datetime="{{ ansible_date_time.date }}">
      <title>The root account's library search path must be the system default and must contain only absolute paths.</title>
      <discussion>The library search path environment variable(s) contain a list of directories for the dynamic linker to search to find libraries.  If this path includes the current working directory or other relative paths, libraries in these directories may be loaded instead of system libraries.  This variable is formatted as a colon-separated list of directories.  If there is an empty entry, such as a leading or trailing colon or two consecutive colons, this is interpreted as the current working directory.  Entries starting with a slash (/) are absolute paths.</discussion>
      <check_content>Verify the LD_LIBRARY_PATH environment variable is empty or not defined for the root user.
      # echo $LD_LIBRARY_PATH
      If a path list is returned, this is a finding.</check_content>
      <fix_text>Edit the root user initialization files and remove any definition of LD_LIBRARY_PATH.</fix_text>

- name: V-22310 Pass
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <procedure> <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} ]]>
      </procedure>
      <output> 
      V-22310
      The root account's library search path must be the system default and must contain only absolute paths.
      If a path list is returned, this is a finding.

      <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} 
      OUTPUT:
      ->  {{ checkmyconf1.stdout }}
      ]]>-
      This is NOT a finding
      -
      </output>
      <comments>LD_LIBRARY_PATH is not set</comments>
      <status>Not a Finding</status>
      <ccis>
      <cci>CCI-000366</cci>
      </ccis>
      </finding>
  when: checkmyconf2.stdout == ""

  # Other options:"Ongoing", "Not Reviewed", or "Not Applicable"
        
- name: V-22310 Fail
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <procedure> <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} ]]>
      </procedure>
      <output> 
      V-22310
      The root account's library search path must be the system default and must contain only absolute paths.
      If a path list is returned, this is a finding.

      <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} 
      OUTPUT:
      ->  {{ checkmyconf1.stdout }}
      ]]>====================================================================
      This is a FINDING
      -
      </output>
      <comments>LD_LIBRARY_PATH is set</comments>
      <status>Ongoing</status>
      <ccis>
      <cci>CCI-000366</cci>
      </ccis>
      </finding>
  when: checkmyconf2.stdout != ""

- name: V-22310 Fix-1
  ignore_errors: True
  when: (checkmyconf2.stdout != "" and FIX == 1)
  lineinfile: dest="{{item}}" state=present regexp="LD_LIBRARY_PATH" line=""
  with_items: "{{checkmyconf2.stdout_lines}}"

#- service: name=FFF state=restarted
#  when: (checkmyconf2.stdout == "" and FIX == 1)

#  stat: path="FFF"
#  when: (checkmyconf2.stat.mode >="0751" and FIX == 1)

