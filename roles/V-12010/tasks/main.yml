###############################################
# Developed For 7.2.4 by Andrew Darley     
#     andrew.darley.ctr@navy.mil  
#      
# Originally created for:
# Solaris 10 x86/SPARC Manual STIG - Ver 1
# Release: 19 Benchmark Date: 28 Jul 2017
# 
# This is expected to run with a play book that
# defines these variables
# output_path
# out_file
# FIX
###############################################


- name: V-12010 Finding Open Tags
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <finding
      v_id="V-12010"
      rule_id="SV-28635r1_rule"
      raw_risk="II"
      datetime="{{ ansible_date_time.date }}">
      <title>Unencrypted FTP must not be used on the system.</title>
      <discussion>FTP is typically unencrypted and, therefore, presents confidentiality and integrity risks.  FTP may be protected by encryption in certain cases, such as when used in a Kerberos environment.   SFTP and FTPS are encrypted alternatives to FTP.</discussion>
      <check_content>Perform the following to determine if unencrypted FTP is enabled.

      # svcs ftp

      If FTP is enabled, ask the SA if it is encrypted.  If it is not, this is a finding.</check_content>
      <fix_text># svcadm disable ftp
      </fix_text>

- name: V-12010 Check
  shell: svcs ftp
  register: checkmyconf1
  ignore_errors: True
  changed_when: False

- name: V-12010 Check 2
  shell: svcs ftp | awk '/disabled/'
  register: checkmyconf2
  ignore_errors: True
  changed_when: False

- name: V-12010 Pass
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <procedure> <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} ]]>
      </procedure>
      <output> 
      V-12010
      Unencrypted FTP must not be used on the system.
      If FTP is enabled, ask the SA if it is encrypted. If it is not, this is a finding.

      <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} 
      OUTPUT:
      ->  {{ checkmyconf1.stdout }}
      ]]>-
      This is NOT a finding
      -
      </output>
      <comments>FTP is disabled</comments>
      <status>Not a Finding</status>
      <ccis>
      <cci>CCI-000366</cci>
      </ccis>
      </finding>
  when: (checkmyconf2.stdout != "" and REPORT == 1)

- name: V-12010 Fail
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <procedure> <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} ]]>
      </procedure>
      <output> 
      V-12010
      Unencrypted FTP must not be used on the system.
      If FTP is enabled, ask the SA if it is encrypted. If it is not, this is a finding.

      <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} 
      OUTPUT:
      ->  {{ checkmyconf1.stdout }}
      ]]>====================================================================
      This is a FINDING
      -
      </output>
      <comments>FTP is NOT disabled</comments>
      <status>Ongoing</status>
      <ccis>
      <cci>CCI-000366</cci>
      </ccis>
      </finding>
  when: checkmyconf2.stdout == ""

#FTP is not fixed with Ansible It can be but oppted not to as FTP is needed on some systems