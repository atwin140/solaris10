###############################################
# Developed For 7.2.4 by Andrew Darley     
#     andrew.darley.ctr@navy.mil  
#      
# Originally created for:
# Solaris 10 x86/SPARC Manual STIG - Ver 1
# Release: 19 Benchmark Date: 28 Jul 2017
# 
# This is expected to run with a play book that
# defines these variables
# output_path
# out_file
# FIX
###############################################


- name: V-22307 Finding Open Tags
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <finding
      v_id="V-22307"
      rule_id="SV-26345r1_rule"
      raw_risk="II"
      datetime="{{ ansible_date_time.date }}">
      <title>The system must prevent the use of dictionary words for passwords.</title>
      <discussion>An easily guessable password provides an open door to any external or internal malicious intruder.  Many computer compromises occur as the result of account name and password guessing.  This is generally done by someone with an automated script using repeated logon attempts until the correct account and password pair is guessed.  Utilities, such as cracklib, can be used to validate passwords are not dictionary words and meet other criteria during password changes.</discussion>
      <check_content>Check /etc/default/passwd for dictionary check configuration.

      # grep DICTION /etc/default/passwd

      If the DICTIONLIST or DICTIONDBDIR settings are not present, or are set to non-existent files or directories, this is a finding.</check_content>
      <fix_text>Edit /etc/default/passwd; add or set DICTIONLIST to the dictionary file and DICTIONDBDIR to a database directory such as /var/passwd.  Generate the password dictionary by running the mkpwdict command.</fix_text>

- name: V-22307 Check
  shell: awk '/DICTION/ && !/^#/' /etc/default/passwd
  register: checkmyconf1
  ignore_errors: True
  changed_when: False

- name: V-22307 Check 2
  shell: awk '/DICTION/ && !/^#/' /etc/default/passwd
  register: checkmyconf2
  ignore_errors: True
  changed_when: False

- name: V-22307 Pass
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <procedure> <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} ]]>
      </procedure>
      <output> 
      V-22307
      The system must prevent the use of dictionary words for passwords.
      If the DICTIONLIST or DICTIONDBDIR settings are not present, or are set to non-existent files or directories, this is a finding.

      <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} 
      OUTPUT:
      ->  {{ checkmyconf1.stdout }}
      ]]>-
      This is NOT a finding
      -
      </output>
      <comments>DICTIONLIST and DICTIONDBDIR are configured</comments>
      <status>Not a Finding</status>
      <ccis>
      <cci>CCI-000189</cci>
      </ccis>
      </finding>
  when: (checkmyconf2.stdout != "" and REPORT == 1)

- name: V-22307 Fail
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <procedure> <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} ]]>
      </procedure>
      <output> 
      V-22307
      The system must prevent the use of dictionary words for passwords.
      If the DICTIONLIST or DICTIONDBDIR settings are not present, or are set to non-existent files or directories, this is a finding.

      <![CDATA[
      Procedure: 
      # {{ checkmyconf1.cmd }} 
      OUTPUT:
      ->  {{ checkmyconf1.stdout }}
      ]]>====================================================================
      This is a FINDING
      -
      </output>
      <comments>DICTIONLIST and DICTIONDBDIR are NOT configured</comments>
      <status>Ongoing</status>
      <ccis>
      <cci>CCI-000189</cci>
      </ccis>
      </finding>
  when: checkmyconf2.stdout == ""

- name: V-22307 Fix-1
  lineinfile: dest=/etc/default/passwd state=present regexp=DICTIONLIST line="DICTIONLIST=/usr/share/lib/dict/words"
  ignore_errors: True
  when: (checkmyconf2.stdout == "" and FIX == 1)

- name: V-22307 Fix-1
  lineinfile: dest=/etc/default/passwd state=present regexp=DICTIONDBDIR line="DICTIONDBDIR=/var/passwd"
  ignore_errors: True
  when: (checkmyconf2.stdout == "" and FIX == 1)

